import React from 'react'
import { useState ,useEffect} from 'react'
const EditRes = () => {
    const [expandedFaculty, setExpandedFaculty] = useState(null);
    const [selectedMember, setSelectedMember] = useState(null);
    const [isModalOpen, setIsModalOpen] = useState(false); // ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á Modal
    const [selectedDepartment, setSelectedDepartment] = useState(""); // ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠ Department
    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);
    const [deleteTarget, setDeleteTarget] = useState(null);
    const [isEditModalOpen, setIsEditModalOpen] = useState(false); // Edit Researcher Modal
    const [editFormData, setEditFormData] = useState(null); // Data for editing
    const [isProcessing, setIsProcessing] = useState(false);
    const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false); // ‚úÖ Success Modal State
    const [isEditSuccessModalOpen, setIsEditSuccessModalOpen] = useState(false); // ‚úÖ Success Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Edit

    const [facultyData, setFacultyData] = useState([
        {
            name: "Electrical and Computer Engineering",
            description:
                "Focuses on the design and integration of computer systems, hardware, and electrical circuits.",
            members: ["Alice", "Bob", "Charlie"],
        },
        {
            name: "Mechanical Engineering",
            description:
                "Focuses on chemical processes and the production of materials and energy.",
            members: ["Dave", "Eve", "Frank"],
        },
        {
            name: "Civil Engineering",
            description:
                "Specializes in the design, construction, and maintenance of infrastructure projects.",
            members: ["Grace", "Hank"],
        },
        {
            name: "Industrial Engineering",
            description:
                "Focuses on optimizing processes, systems, and organizations to improve efficiency.",
            members: ["Ivy", "Jack"],
        },
        {
            name: "Others", // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà est.
            description: "For researchers without a defined department.",
            members: ["Kim", "Lee"], // ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ
        },
    ]);

    //‡πÄ‡∏û‡∏¥‡πà‡∏° Reasercher ‡∏Ñ‡∏ô‡πÉ‡∏´‡∏°‡πà
    const handleAddNewResearcher = async (formData) => {
        try {
            console.log("üìå Received formData:", formData);
            const formattedDepartment = formData.department;

            // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô FormData ‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (!(formData instanceof FormData)) {
                console.error("üö® formData is not an instance of FormData!");
                return;
            }

            if (formData.image) {
                formData.append("image", formData.image);
            }

            const response = await fetch(
                `https://project-six-rouge.vercel.app/researcher/${formattedDepartment}/new`,
                {
                    method: "POST",
                    body: JSON.stringify({
                        ...formData,
                        // image: formData.image, // ‡∏™‡πà‡∏á Base64 ‡∏£‡∏π‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API
                        // position: formData.position, // ‚úÖ ‡∏™‡πà‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                        // position_thai: formData.position_thai, // ‚úÖ ‡∏™‡πà‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
                    }),
                    headers: {
                        "Content-Type": "application/json",
                    },
                }
            );

            const result = await response.json();
            console.log("üìå Full API Response:", response, result);

            if (response.ok) {
                setIsSuccessModalOpen(true); // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á Success Modal ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ alert()
                // window.location.reload(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤
                // alert(`Successfully added ${formData.name} to ${formData.department}`);
                // Fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï `facultyData`
            } else {
                alert("Failed to add researcher: " + result.message);
            }
        } catch (error) {
            console.error("Error adding new researcher:", error);
            alert("Error adding new researcher.");
        }
    };

    //‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Reasearcher
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏à‡∏±‡∏¢
    const handleDeleteMember = (facultyName, member) => {
        setDeleteTarget({ facultyName, member });
        setIsDeleteModalOpen(true); // ‡πÄ‡∏õ‡∏¥‡∏î Modal
    };

    //Add researcher Modal
    const AddResearcherModal = ({ isOpen, onClose, onSubmit, department }) => {
        const [formData, setFormData] = useState({
            name: "",
            name_thai: "",
            position: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
            position_thai: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
            department: department || "",
            faculty: "Engineering, Naresuan University",
            contact: "",
            phone: "",
            office: "",
            image: null,
            imagePreview: null,
        });

        const [isSubmitting, setIsSubmitting] = useState(false); // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏î‡∏ã‡πâ‡∏≥


        useEffect(() => {
            if (isOpen) {
                setFormData({
                    name: "",
                    name_thai: "",
                    position: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                    position_thai: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                    department: department || "",
                    faculty: "Engineering, Naresuan University",
                    contact: "",
                    phone: "",
                    office: "",
                    image: null,
                    imagePreview: null, // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î modal
                });
                setIsSubmitting(false); // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î Modal ‡πÉ‡∏´‡∏°‡πà
            }
        }, [isOpen, department]);

        const handleChange = (e) => {
            const { name, value, files } = e.target;

            if (name === "image" && files?.length > 0) {
                const file = files[0];

                setFormData((prev) => ({
                    ...prev,
                    image: file,
                    imagePreview: URL.createObjectURL(file), // ‚úÖ ‡πÉ‡∏ä‡πâ URL.createObjectURL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
                }));

                console.log("üì∏ Image file selected:", file);
            } else {
                setFormData((prev) => ({
                    ...prev,
                    [name]: value,
                }));
            }
        };

        const handleSubmit = async (e) => {
            e.preventDefault();
            console.log("üìå Submitting formData:", formData);

            const data = new FormData();
            data.append("name", formData.name);
            data.append("name_thai", formData.name_thai);
            data.append("position", formData.position);
            data.append("position_thai", formData.position_thai);
            data.append("department", formData.department);
            data.append("faculty", formData.faculty);
            data.append("contact", formData.contact);
            data.append("phone", formData.phone);
            data.append("office", formData.office);

            if (isSubmitting) return; // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥
            setIsSubmitting(true); // ‚úÖ ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß

            await onSubmit(formData);
            setIsSubmitting(false); // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à

            setIsSuccessModalOpen(true); // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Success Modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Submit ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            setTimeout(() => {
                setIsSuccessModalOpen(false); // ‚úÖ ‡∏õ‡∏¥‡∏î Modal ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                onClose(); // ‚úÖ ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏à‡∏±‡∏¢
            }, 3000);

            if (formData.image) {
                data.append("image", formData.image);
            }

            console.log("üìå Final FormData before submit:", [...data.entries()]);

            try {
                const response = await fetch(
                    `https://project-six-rouge.vercel.app/researcher/${formData.department}/new`,
                    {
                        method: "POST",
                        body: data,
                    }
                );

                const result = await response.json();
                console.log("üìå API Response:", result);
                if (response.ok) {
                    // alert(
                    //   `Successfully added ${formData.name} to ${formData.department}`
                    // );
                    window.location.reload();
                } else {
                    alert("Failed to add researcher: " + result.message);
                }
            } catch (error) {
                console.error("üö® Error adding new researcher:", error);
                alert("An error occurred while adding the researcher.");
            }
        };

        if (!isOpen) return null;

        return (
            <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                <div className="bg-white p-6 rounded-md w-[570px] flex flex-col items-center">
                    <h2 className="text-xl font-semibold mb-4 text-center">
                        Add New Researcher
                    </h2>
                    <form onSubmit={handleSubmit} className="space-y-4 w-full">
                        {/* ‚úÖ ‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
                        <div className="flex flex-col items-center">
                            {formData.imagePreview ? (
                                <img
                                    src={formData.imagePreview}
                                    alt="Preview"
                                    className="h-40 w-40 object-cover rounded-full mb-4"
                                />
                            ) : (
                                <div className="h-40 w-40 bg-gray-200 rounded-full flex items-center justify-center mb-4">
                                    <span className="text-gray-500">No Image</span>
                                </div>
                            )}
                            <input
                                type="file"
                                name="image"
                                accept="image/*"
                                className="mt-2"
                                onChange={handleChange}
                            />
                        </div>

                        {/* üîπ Row 1: Position (EN) + Name */}
                        <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2">
                            <select
                                name="position"
                                value={formData.position}
                                onChange={handleChange}
                                className="w-full sm:w-1/3 p-2 border rounded"
                            >
                                <option value="‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏">‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏</option>
                                <option value="PROF.">PROF.</option>
                                <option value="PROF. DR.">PROF. DR.</option>
                                <option value="ASSOC. PROF.">ASSOC. PROF.</option>
                                <option value="ASSOC. PROF. DR.">ASSOC. PROF. DR.</option>
                                <option value="ASST. PROF.">ASST. PROF.</option>
                                <option value="ASST. PROF. DR.">ASST. PROF. DR.</option>
                                <option value="DR.">DR.</option>
                                <option value="LECTURER.">LECTURER.</option>
                                <option value="Mr.">Mr.</option>
                                <option value="Mrs.">Mrs.</option>
                                <option value="Miss">Miss</option>
                                <option value="Ms.">Ms.</option>
                            </select>
                            <input
                                type="text"
                                name="name"
                                placeholder="Name"
                                required
                                className="w-full sm:w-2/3 p-2 border rounded"
                                onChange={handleChange}
                            />
                        </div>

                        {/* üîπ Row 2: Position (TH) + Name (TH) */}
                        <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2">
                            <select
                                name="position_thai"
                                value={formData.position_thai}
                                onChange={handleChange}
                                className="w-full sm:w-1/3 p-2 border rounded"
                            >
                                <option value="‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏">‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏</option>
                                <option value="‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå">‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</option>
                                <option value="‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.">‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.</option>
                                <option value="‡∏£‡∏≠‡∏á‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå">‡∏£‡∏≠‡∏á‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</option>
                                <option value="‡∏£‡∏≠‡∏á‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.">‡∏£‡∏≠‡∏á‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.</option>
                                <option value="‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå">‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</option>
                                <option value="‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.">
                                    ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.
                                </option>
                                <option value="‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå">‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</option>
                                <option value="‡∏ô‡∏≤‡∏¢">‡∏ô‡∏≤‡∏¢</option>
                                <option value="‡∏ô‡∏≤‡∏á">‡∏ô‡∏≤‡∏á</option>
                                <option value="‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß">‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß</option>
                            </select>
                            <input
                                type="text"
                                name="name_thai"
                                placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"
                                className="w-full sm:w-2/3 p-2 border rounded"
                                onChange={handleChange}
                            />
                        </div>
                        <input
                            type="email"
                            name="contact"
                            placeholder="Email"
                            className="w-full p-2 border rounded"
                            onChange={handleChange}
                        />
                        <input
                            type="text"
                            name="phone"
                            placeholder="Phone"
                            className="w-full p-2 border rounded"
                            onChange={handleChange}
                        />
                        <input
                            type="text"
                            name="office"
                            placeholder="Office"
                            className="w-full p-2 border rounded"
                            onChange={handleChange}
                        />
                        <label className="block text-sm font-medium text-gray-700">
                            Department:
                            <select
                                disabled
                                name="department"
                                value={formData.department}
                                onChange={handleChange}
                                required
                                className="w-full p-2 border rounded"
                            >
                                <option value="">Select Department</option>
                                <option value="Electrical and Computer Engineering">
                                    Electrical and Computer Engineering
                                </option>
                                <option value="Mechanical Engineering">
                                    Mechanical Engineering
                                </option>
                                <option value="Civil Engineering">Civil Engineering</option>
                                <option value="Industrial Engineering">
                                    Industrial Engineering
                                </option>
                                <option value="Others">Others</option>
                            </select>
                        </label>
                        <div className="flex justify-end space-x-2">
                            <button
                                type="button"
                                onClick={onClose}
                                className="px-4 py-2 bg-gray-300 rounded"
                            >
                                Cancel
                            </button>
                            <button
                                type="submit"
                                className="px-4 py-2 bg-blue-500 text-white rounded"
                            >
                                Submit
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        );
    };
    // Edit Researcher Modal
    const EditResearcherModal = ({ isOpen, onClose, initialData, onSubmit }) => {
        const [formData, setFormData] = useState(initialData);

        useEffect(() => {
            if (initialData) {
                setFormData(initialData);
            }
        }, [initialData]);

        const handleChange = (e) => {
            const { name, value, files } = e.target;

            if (name === "image" && files?.length > 0) {
                const file = files[0];

                setFormData((prev) => ({
                    ...prev,
                    image: file, // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå File Object
                    imagePreview: URL.createObjectURL(file), // ‚úÖ ‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
                }));

                console.log("üì∏ Image file selected:", file);
            } else {
                setFormData((prev) => ({
                    ...prev,
                    [name]: value,
                }));
            }
        };

        const handleSubmit = async (e) => {
            e.preventDefault();
            await onSubmit(formData);
            setIsEditSuccessModalOpen(true); // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Success Modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Submit ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

            setTimeout(() => {
                setIsEditSuccessModalOpen(false); // ‚úÖ ‡∏õ‡∏¥‡∏î Modal ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                onClose(); // ‚úÖ ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
            }, 3000);
        };

        if (!isOpen) return null;

        return (
            <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                <div className="bg-white p-6 rounded-md w-[570px] flex flex-col items-center">
                    <h2 className="text-xl font-bold mb-4">Edit Researcher</h2>
                    <form onSubmit={handleSubmit} className="space-y-4 w-full">
                        {/* Image Preview and Upload */}
                        <div className="flex flex-col items-center">
                            {formData.imagePreview || formData.imageUrl ? (
                                <img
                                    src={formData.imagePreview || formData.imageUrl}
                                    alt="Profile"
                                    className="h-40 w-40 object-cover rounded-full mb-4"
                                />
                            ) : (
                                <div className="h-40 w-40 bg-gray-200 rounded-full flex items-center justify-center mb-4">
                                    <span className="text-gray-500">No Image</span>
                                </div>
                            )}
                            <input
                                type="file"
                                name="image"
                                accept="image/*"
                                className="mt-2"
                                onChange={handleChange}
                            />
                        </div>

                        {/* Text Fields */}
                        {/* üîπ Row 1: Position (EN) + Name */}
                        <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2">
                            <select
                                name="position"
                                value={formData.position}
                                onChange={handleChange}
                                className="w-full sm:w-1/3 p-2 border rounded"
                            >
                                <option value="‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏">‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏</option>
                                <option value="PROF.">PROF.</option>
                                <option value="PROF. DR.">PROF. DR.</option>
                                <option value="ASSOC. PROF.">ASSOC. PROF.</option>
                                <option value="ASSOC. PROF. DR.">ASSOC. PROF. DR.</option>
                                <option value="ASST. PROF.">ASST. PROF.</option>
                                <option value="ASST. PROF. DR.">ASST. PROF. DR.</option>
                                <option value="DR.">DR.</option>
                                <option value="LECTURER.">LECTURER.</option>
                                <option value="Mr.">Mr.</option>
                                <option value="Mrs.">Mrs.</option>
                                <option value="Miss">Miss</option>
                                <option value="Ms.">Ms.</option>
                            </select>
                            <input
                                type="text"
                                name="name"
                                value={formData.name}
                                placeholder="Name"
                                required
                                className="w-full sm:w-2/3 p-2 border rounded"
                                onChange={handleChange}
                            />
                        </div>

                        {/* üîπ Row 2: Position (TH) + Name (TH) */}
                        <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2">
                            <select
                                name="position_thai"
                                value={formData.position_thai}
                                onChange={handleChange}
                                className="w-full sm:w-1/3 p-2 border rounded"
                            >
                                <option value="‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏">‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏</option>
                                <option value="‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå">‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</option>
                                <option value="‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.">‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.</option>
                                <option value="‡∏£‡∏≠‡∏á‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå">‡∏£‡∏≠‡∏á‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</option>
                                <option value="‡∏£‡∏≠‡∏á‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.">‡∏£‡∏≠‡∏á‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.</option>
                                <option value="‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå">‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</option>
                                <option value="‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.">
                                    ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏î‡∏£.
                                </option>
                                <option value="‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå">‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</option>
                                <option value="‡∏ô‡∏≤‡∏¢">‡∏ô‡∏≤‡∏¢</option>
                                <option value="‡∏ô‡∏≤‡∏á">‡∏ô‡∏≤‡∏á</option>
                                <option value="‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß">‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß</option>
                            </select>
                            <input
                                type="text"
                                name="name_thai"
                                value={formData.name_thai}
                                placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"
                                className="w-full sm:w-2/3 p-2 border rounded"
                                onChange={handleChange}
                            />
                        </div>
                        <input
                            type="email"
                            name="contact"
                            value={formData.contact}
                            onChange={handleChange}
                            placeholder="Email"
                            className="w-full p-2 border rounded"
                        />
                        <input
                            type="text"
                            name="phone"
                            value={formData.phone}
                            onChange={handleChange}
                            placeholder="Phone"
                            className="w-full p-2 border rounded"
                        />
                        <input
                            type="text"
                            name="office"
                            value={formData.office}
                            onChange={handleChange}
                            placeholder="Office"
                            className="w-full p-2 border rounded"
                        />

                        {/* Dropdown Select for Department */}
                        <label className="block text-sm font-medium text-gray-700">
                            Department:
                            <select
                                name="department"
                                value={formData.department}
                                onChange={handleChange}
                                required
                                className="w-full p-2 border rounded"
                            >
                                <option value="Electrical and Computer Engineering">
                                    Electrical and Computer Engineering
                                </option>
                                <option value="Mechanical Engineering">
                                    Mechanical Engineering
                                </option>
                                <option value="Civil Engineering">Civil Engineering</option>
                                <option value="Industrial Engineering">
                                    Industrial Engineering
                                </option>
                                <option value="Others">Others</option>
                            </select>
                        </label>

                        {/* Submit & Cancel Buttons */}
                        <div className="flex justify-end space-x-2">
                            <button
                                type="button"
                                onClick={onClose}
                                className="px-4 py-2 bg-gray-300 rounded"
                            >
                                Cancel
                            </button>
                            <button
                                type="submit"
                                className="px-4 py-2 bg-blue-500 text-white rounded"
                            >
                                Save
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        );
    };

    const fetchResearchers = async () => {
        try {
            const response = await fetch(
                "https://project-six-rouge.vercel.app/researcher"
            );
            const data = await response.json();

            console.log("üìå Fetched Data from API:", data); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API

            if (data.status === "ok" && Array.isArray(data.data)) {
                const departments = [
                    "Electrical and Computer Engineering",
                    "Mechanical Engineering",
                    "Civil Engineering",
                    "Industrial Engineering",
                    "Others",
                ];

                const groupedData = departments.map((dept) => ({
                    name: dept,
                    description: `Focuses on ${dept} studies.`,
                    members: data.data
                        .filter((researcher) => researcher.department === dept)
                        .map((res) => ({
                            id: res.id,
                            name: res.name || "Unknown",
                            name_thai: res.name_thai || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                            position: res.position || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", // ‚úÖ ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                            position_thai: res.position_thai || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", // ‚úÖ ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
                            department: res.department || "Unspecified",
                            contact: res.contact || "-",
                            phone: res.phone || "-",
                            office: res.office || "-",
                            imageUrl: res.image,
                        })),
                }));

                setFacultyData(groupedData);
            }
        } catch (error) {
            console.error("Error fetching data: ", error);
        }
    };

    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå mount
    useEffect(() => {
        fetchResearchers();
    }, []);

    useEffect(() => {
        console.log("üìå Faculty Data Updated:", facultyData);
    }, [facultyData]);

    const fetchData = async () => {
        try {
            const response = await fetch(
                "https://project-six-rouge.vercel.app/researcher"
            );
            const data = await response.json();

            if (data.status === "ok" && Array.isArray(data.data)) {
                const departments = [
                    "Electrical and Computer Engineering",
                    "Mechanical Engineering",
                    "Civil Engineering",
                    "Industrial Engineering",
                    "Others",
                ];

                const groupedData = departments.map((dept) => ({
                    name: dept,
                    description: `Focuses on ${dept} studies.`,
                    members: data.data
                        .filter((researcher) => researcher.department === dept)
                        .map((res) => ({
                            id: res.id,
                            name: res.name || "Unknown",
                            name_thai: res.name_thai || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                            position: res.position || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", // ‚úÖ ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                            position_thai: res.position_thai || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", // ‚úÖ ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
                            department: res.department || "Unspecified",
                            contact: res.contact || "-",
                            phone: res.phone || "-",
                            office: res.office || "-",
                            imageUrl: res.image || "https://via.placeholder.com/150",
                        })),
                }));

                console.log("Fetched Faculty Data:", groupedData);
                setFacultyData(groupedData);
            }
        } catch (error) {
            console.error("Error fetching data: ", error);
        }
    };

    // Handle Edit Submit
    const handleEditSubmit = async (updatedData) => {
        const formattedDepartment = updatedData.department;
        const researcherId = updatedData.id;
        const updateUrl = `https://project-six-rouge.vercel.app/researcher/${formattedDepartment}/${researcherId}/update`;

        const data = new FormData();
        data.append("name", updatedData.name);
        data.append("name_thai", updatedData.name_thai);
        data.append("position", updatedData.position); // ‚úÖ ‡∏™‡πà‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
        data.append("position_thai", updatedData.position_thai); // ‚úÖ ‡∏™‡πà‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
        data.append("department", updatedData.department);
        data.append("contact", updatedData.contact);
        data.append("phone", updatedData.phone);
        data.append("office", updatedData.office);

        if (updatedData.image && updatedData.image instanceof File) {
            data.append("image", updatedData.image); // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
        }

        try {
            const response = await fetch(updateUrl, {
                method: "PUT",
                body: data, // ‚úÖ ‡πÉ‡∏ä‡πâ `FormData` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
            });

            if (response.ok) {
                // alert("Researcher updated successfully!");
                await fetchData(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
                setIsEditModalOpen(false); // ‡∏õ‡∏¥‡∏î Modal
            } else {
                alert("Failed to update researcher.");
            }
        } catch (error) {
            console.error("Error updating researcher:", error);
        }
    };

    // Open Edit Modal
    const handleEditClick = (member) => {
        console.log("üìå Member Selected for Editing:", member); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        setEditFormData(member); // Set data for editing
        setIsEditModalOpen(true); // Open modal
    };

    const confirmDelete = async () => {
        if (!deleteTarget) return;

        const { facultyName, member } = deleteTarget;
        const department = facultyName;
        const researcherId = member.id;

        const deleteUrl = `https://project-six-rouge.vercel.app/researcher/${department}/${researcherId}`;
        if (isProcessing) return; // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥

        setIsProcessing(true); // ‚úÖ ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß

        try {
            const response = await fetch(deleteUrl, { method: "DELETE" });
            const result = await response.json();

            if (response.ok) {
                // alert(`${member.name} has been deleted successfully.`);
                setFacultyData((prevFacultyData) =>
                    prevFacultyData.map((faculty) =>
                        faculty.name === facultyName
                            ? {
                                ...faculty,
                                members: faculty.members.filter(
                                    (existingMember) => existingMember.id !== researcherId
                                ),
                            }
                            : faculty
                    )
                );
            } else {
                alert(`Failed to delete: ${result.message}`);
            }
        } catch (error) {
            console.error("Error deleting researcher:", error);
            alert("An error occurred while trying to delete the researcher.");
        } finally {
            setIsDeleteModalOpen(false); // ‡∏õ‡∏¥‡∏î Modal
            setDeleteTarget(null); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤
            setIsProcessing(false); // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
        }
    };

    const handleFacultyClick = (facultyName) => {
        setExpandedFaculty((prev) => (prev === facultyName ? null : facultyName));
    };

    const handleMemberClick = (member) => {
        if (!member || !member.id) {
            console.error("Invalid member selected:", member);
            return;
        }
        setSelectedMember(member); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    };

    //‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏¥‡∏î Modal Add Researcher
    const openModal = (department) => {
        const mappedDepartment = department === "est." ? "Other" : department; // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å est. ‡πÉ‡∏´‡πâ map ‡πÄ‡∏õ‡πá‡∏ô "Other"
        setSelectedDepartment(mappedDepartment);
        setIsModalOpen(true);
    };

    const closeModal = () => {
        setIsModalOpen(false);
    };

    useEffect(() => {
        const fetchData = async () => {
            try {
                const response = await fetch(
                    "https://project-six-rouge.vercel.app/researcher"
                );
                const data = await response.json();

                if (data.status === "ok" && Array.isArray(data.data)) {
                    const departments = [
                        "Electrical and Computer Engineering",
                        "Mechanical Engineering",
                        "Civil Engineering",
                        "Industrial Engineering",
                        "Others",
                    ];

                    const groupedData = departments.map((dept) => ({
                        name: dept,
                        description: `Focuses on ${dept} studies.`,
                        members: data.data
                            .filter((researcher) => researcher.department === dept)
                            .map((res) => ({
                                id: res.id,
                                name: res.name || "Unknown",
                                name_thai: res.name_thai || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                                position: res.position || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", // ‚úÖ ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                                position_thai: res.position_thai || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", // ‚úÖ ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
                                department: res.department || "Unspecified",
                                contact: res.contact || "-",
                                phone: res.phone || "-",
                                office: res.office || "-",
                                imageUrl: res.image || "https://via.placeholder.com/150",
                            })),
                    }));

                    console.log("üìå Faculty Data Updated (After Fetch):", groupedData);
                    setFacultyData(groupedData);
                }
            } catch (error) {
                console.error("Error fetching data: ", error);
            }
        };

        fetchData();
    }, []);

    useEffect(() => {
        fetchData();
    }, []);

    useEffect(() => {
        console.log("üìå Faculty Data Updated (After Fetch):", facultyData);
    }, [facultyData]);
    return (
        <div className="space-y-4">
            {selectedMember ? (
                <>
                    {console.log("Selected Member in Editpage:", selectedMember)}
                    {console.log(
                        "Selected Department in Editpage:",
                        selectedDepartment
                    )}
                    <Editpage
                        researcherId={selectedMember.id}
                        name={selectedMember.name}
                        department={selectedDepartment}
                        setSelectedMember={setSelectedMember}
                    />
                </>
            ) : (
                facultyData.map((faculty) => (
                    <div
                        key={faculty.name}
                        className="bg-white border-2 rounded-lg w-full cursor-pointer mt-10"
                    >
                        {/* Header Section */}
                        <div
                            className="relative flex items-center justify-between p-4 cursor-pointer"
                            onClick={() => handleFacultyClick(faculty.name)}
                        >
                            <div className="flex flex-col">
                                <span className="font-semibold">{faculty.name}</span>
                                <span className="text-sm text-gray-600">
                                    {faculty.description}
                                </span>
                            </div>
                            <span className="text-gray-600">
                                {expandedFaculty === faculty.name ? "‚ñ≤" : "‚ñº"}
                            </span>
                        </div>

                        {/* Dropdown Content */}
                        <div
                            className={`bg-gray-50 px-4 pb-4 space-y-2 overflow-hidden transition-all duration-200 ease-in-out ${expandedFaculty === faculty.name
                                ? "max-h-[400px] opacity-100 overflow-y-auto"
                                : "max-h-0 opacity-0 pb-0"
                                }`}
                        >
                            {/* Add Researcher Button */}
                            <div className="flex justify-end space-x-2">
                                <button
                                    className="bg-green-500 text-white px-4 py-2 rounded-md"
                                    onClick={() => openModal(faculty.name)}
                                >
                                    Add Researcher
                                </button>
                            </div>

                            {/* Delete Confirmation Modal */}
                            {isDeleteModalOpen && (
                                <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                                    <div className="bg-white p-6 rounded-md w-96">
                                        <h2 className="text-xl font-bold mb-4">
                                            Confirm Delete
                                        </h2>
                                        <p>
                                            Are you sure you want to delete{" "}
                                            <strong>{deleteTarget?.member.name}</strong>?
                                        </p>
                                        <div className="flex justify-end mt-6 space-x-4">
                                            <button
                                                onClick={() => setIsDeleteModalOpen(false)} // ‡∏õ‡∏¥‡∏î Modal
                                                className="px-4 py-2 bg-gray-500 text-white rounded-md"
                                            >
                                                Cancel
                                            </button>
                                            <button
                                                onClick={confirmDelete}
                                                className={`px-4 py-2 text-white rounded ${isProcessing ? "bg-gray-400" : "bg-red-500"
                                                    }`}
                                                disabled={isProcessing} // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥
                                            >
                                                {isProcessing ? "Deleting..." : "Delete"}
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            )}

                            {/* Members List */}
                            {faculty.members.length > 0 ? (
                                faculty.members.map((member, index) => (
                                    <div
                                        key={`${member.name}-${index}`}
                                        className="flex justify-between items-center bg-white border rounded-lg p-2 hover:bg-gray-100"
                                        onClick={() => {
                                            handleMemberClick(member);
                                            console.log("Selected Member:", member);
                                            console.log("Selected Department:", faculty.name);
                                            if (!member.id) {
                                                console.error("Member ID is undefined:", member);
                                            }
                                            setSelectedMember(member); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                                            setSelectedDepartment(faculty.name); // ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                                        }}
                                    >
                                        <div className="flex items-center space-x-3">
                                            <img
                                                src={
                                                    member.imageUrl ||
                                                    "https://via.placeholder.com/150"
                                                } // ‡∏Å‡∏£‡∏ì‡∏µ imageUrl ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤
                                                alt={member.name}
                                                className="w-10 h-10 rounded-full object-cover"
                                                onError={(e) => {
                                                    e.target.src =
                                                        "https://dummyimage.com/150x150/cccccc/ffffff.png&text=No+Image"; // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ default ‡∏´‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å URL ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
                                                }}
                                            />
                                            <span>{member.name}</span>
                                        </div>

                                        <div className="flex space-x-2">
                                            <button
                                                className=" bg-blue-500 text-white px-4 py-2 rounded-md"
                                                onClick={(e) => {
                                                    e.stopPropagation();
                                                    handleEditClick(member);
                                                }}
                                            >
                                                Edit
                                            </button>
                                            <button
                                                className="flex-1 bg-red-500 text-white px-4 py-2 rounded-md text-center"
                                                onClick={(e) => {
                                                    e.stopPropagation();
                                                    handleDeleteMember(faculty.name, member); // ‡∏™‡πà‡∏á `faculty.name` ‡πÅ‡∏•‡∏∞ `member`
                                                }}
                                            >
                                                Delete
                                            </button>
                                        </div>
                                    </div>
                                ))
                            ) : (
                                <div className="text-gray-500 text-sm p-2">
                                    No members in this department.
                                </div>
                            )}
                        </div>
                    </div>
                ))
            )}

            {isEditModalOpen && (
                <EditResearcherModal
                    isOpen={isEditModalOpen}
                    onClose={() => setIsEditModalOpen(false)}
                    initialData={editFormData}
                    onSubmit={handleEditSubmit}
                />
            )}

            {/* ‚úÖ Success Modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à */}
            {isEditSuccessModalOpen && (
                <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                    <div className="bg-white p-6 rounded-md text-center w-[400px]">
                        <h2 className="text-green-600 text-lg font-bold">Success!</h2>
                        <p className="mt-2 text-gray-700">
                            Researcher information has been updated successfully.
                        </p>
                        <button
                            onClick={() => setIsEditSuccessModalOpen(false)}
                            className="mt-4 px-4 py-2 bg-green-500 text-white rounded"
                        >
                            OK
                        </button>
                    </div>
                </div>
            )}
            {/* ‚úÖ Success Modal */}
            {isSuccessModalOpen && (
                <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                    <div className="bg-white p-6 rounded-md text-center w-[400px]">
                        <h2 className="text-green-600 text-lg font-bold">Success!</h2>
                        <p className="mt-2 text-gray-700">
                            Researcher has been added successfully.
                        </p>
                        <button
                            onClick={() => setIsSuccessModalOpen(false)}
                            className="mt-4 px-4 py-2 bg-green-500 text-white rounded"
                        >
                            OK
                        </button>
                    </div>
                </div>
            )}

            {/* Modal Component */}
            <AddResearcherModal
                isOpen={isModalOpen}
                onClose={closeModal}
                onSubmit={(formData) => {
                    handleAddNewResearcher(formData); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleAddNewResearcher
                    console.log("Submitted data:", formData);
                    // ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà logic ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á API ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï State ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                    closeModal();
                }}
                department={selectedDepartment}
            />
        </div>

    )
}

export default EditRes